(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{356:function(s,t,a){"use strict";a.r(t);var e=a(3),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、xss"}},[s._v("#")]),s._v(" 一、xss")]),s._v(" "),a("blockquote",[a("p",[s._v("XSS，即 Cross Site Script，中译是跨站脚本攻击；其原本缩写是 CSS，但为了和层叠样式表(Cascading Style Sheet)有所区分，因而在安全领域叫做 XSS。")])]),s._v(" "),a("p",[s._v("XSS 攻击是指攻击者在网站上注入恶意的客户端代码，通过"),a("strong",[s._v("恶意脚本")]),s._v("对客户端网页进行篡改，从而在用户浏览网页时，对用户浏览器进行控制或者获取用户隐私数据的一种攻击方式。")]),s._v(" "),a("p",[s._v("攻击者对客户端网页注入的恶意脚本一般包括 JavaScript，有时也会包含 HTML 和 Flash。有很多种方式进行 XSS 攻击，但它们的共同点为：将一些隐私数据像 cookie、session 发送给攻击者，将受害者重定向到一个由攻击者控制的网站，在受害者的机器上进行一些恶意操作。")]),s._v(" "),a("p",[s._v("跨站脚本攻击有可能造成以下影响:")]),s._v(" "),a("ul",[a("li",[s._v("利用虚假输入表单骗取用户个人信息。")]),s._v(" "),a("li",[s._v("利用脚本窃取用户的Cookie值，被害者在不知情的情况下，帮助攻击者发送恶意请求。")]),s._v(" "),a("li",[s._v("显示伪造的文章或图片。")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-xss攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-xss攻击"}},[s._v("#")]),s._v(" 1.1 XSS攻击")]),s._v(" "),a("p",[s._v("XSS攻击可以分为3类：反射型（非持久型）、存储型（持久型）、基于DOM。")]),s._v(" "),a("h4",{attrs:{id:"_1-1-1-非持久型-（反射性xss）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-非持久型-（反射性xss）"}},[s._v("#")]),s._v(" 1.1.1 非持久型 （反射性XSS）")]),s._v(" "),a("p",[s._v("反射型 XSS 只是简单地把用户输入的数据 “反射” 给浏览器，这种攻击方式往往需要攻击者诱使用户点击一个"),a("strong",[s._v("恶意链接")]),s._v("，或者提交一个表单，或者进入一个"),a("strong",[s._v("恶意网站")]),s._v("时，注入脚本进入被攻击者的网站。")]),s._v(" "),a("p",[s._v("攻击者可以注入任意的恶意脚本进行攻击，可能注入恶作剧脚本，或者注入能获取用户隐私数据(如cookie)的脚本，这取决于攻击者的目的。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/68747470733a2f2f757365722d676f6c642d63646e2e786974752e696f2f323031392f312f32332f313638376234643435663662326437343f773d37333226683d31343926663d706e6726733d3530373838.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<option value=1>'")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("     location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("href"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("href"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'default='")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'</option>'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<option value=2>English</option>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("攻击者可以直接通过 URL (类似："),a("code",[s._v("https://xxx.com/xxx?default=<script>alert(document.cookie)<\/script>")]),s._v(") 注入可执行的脚本代码。不过一些浏览器如Chrome其内置了一些XSS过滤器，可以防止大部分反射型XSS攻击。")]),s._v(" "),a("p",[s._v("非持久型 XSS 漏洞攻击有以下几点特征：")]),s._v(" "),a("ul",[a("li",[s._v("即时性，不经过服务器存储，直接通过 HTTP 的 GET 和 POST 请求就能完成一次攻击，拿到用户隐私数据。")]),s._v(" "),a("li",[s._v("攻击者需要诱骗点击,必须要通过用户点击链接才能发起")]),s._v(" "),a("li",[s._v("反馈率低，所以较难发现和响应修复")]),s._v(" "),a("li",[s._v("盗取用户敏感保密信息")])]),s._v(" "),a("p",[s._v("为了防止出现非持久型 XSS 漏洞，需要确保这么几件事情：")]),s._v(" "),a("ul",[a("li",[s._v("Web 页面渲染的所有内容或者渲染的数据都必须来自于服务端。")]),s._v(" "),a("li",[s._v("尽量不要从 "),a("code",[s._v("URL")]),s._v("，"),a("code",[s._v("document.referrer")]),s._v("，"),a("code",[s._v("document.forms")]),s._v(" 等这种 DOM API 中获取数据直接渲染。")]),s._v(" "),a("li",[s._v("尽量不要使用 "),a("code",[s._v("eval")]),s._v(", "),a("code",[s._v("new Function()")]),s._v("，"),a("code",[s._v("document.write()")]),s._v("，"),a("code",[s._v("document.writeln()")]),s._v("，"),a("code",[s._v("window.setInterval()")]),s._v("，"),a("code",[s._v("window.setTimeout()")]),s._v("，"),a("code",[s._v("innerHTML")]),s._v("，"),a("code",[s._v("document.createElement()")]),s._v(" 等可执行字符串的方法。")]),s._v(" "),a("li",[s._v("如果做不到以上几点，也必须对涉及 DOM 渲染的方法传入的字符串参数做 escape 转义。")]),s._v(" "),a("li",[s._v("前端渲染的时候对任何的字段都需要做 escape 转义编码。")])]),s._v(" "),a("h4",{attrs:{id:"_1-1-2-存储型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-存储型"}},[s._v("#")]),s._v(" 1.1.2 存储型")]),s._v(" "),a("p",[s._v("存储型 XSS 会把用户输入的数据 “存储” 在服务器端，当浏览器请求数据时，脚本从服务器上传回并执行。这种 XSS 攻击具有很强的稳定性。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/6876f6c642d63646e236303865623638313431.png",alt:""}})]),s._v(" "),a("p",[s._v("比较常见的一个场景是攻击者在社区或论坛上写下一篇包含恶意 JavaScript 代码的文章或评论，文章或评论发表后，所有访问该文章或评论的用户，都会在他们的浏览器中执行这段恶意的 JavaScript 代码。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/33d38313235.png",alt:""}})]),s._v(" "),a("p",[s._v("主要注入页面方式和非持久型 XSS 漏洞类似，只不过持久型的不是来源于 URL，referer，forms 等，而是来源于"),a("strong",[s._v("后端从数据库中读出来的数据")]),s._v(" 。持久型 XSS 攻击不需要诱骗点击，黑客只需要在提交表单的地方完成注入即可，但是这种 XSS 攻击的成本相对还是很高。")]),s._v(" "),a("p",[s._v("攻击成功需要同时满足以下几个条件：")]),s._v(" "),a("ul",[a("li",[s._v("POST 请求提交表单后端没做转义直接入库。")]),s._v(" "),a("li",[s._v("后端从数据库中取出数据没做转义直接输出给前端。")]),s._v(" "),a("li",[s._v("前端拿到后端数据没做转义直接渲染成 DOM。")])]),s._v(" "),a("p",[s._v("持久型 XSS 有以下几个特点：")]),s._v(" "),a("ul",[a("li",[s._v("持久性，植入在数据库中")]),s._v(" "),a("li",[s._v("盗取用户敏感私密信息")]),s._v(" "),a("li",[s._v("危害面广")])]),s._v(" "),a("h4",{attrs:{id:"_1-1-3-基于dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-基于dom"}},[s._v("#")]),s._v(" 1.1.3 基于DOM")]),s._v(" "),a("p",[s._v("基于 DOM 的 XSS 攻击是指通过恶意脚本修改页面的 DOM 结构，是纯粹发生在客户端的攻击。")]),s._v(" "),a("h3",{attrs:{id:"_1-2-xss攻击的防范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-xss攻击的防范"}},[s._v("#")]),s._v(" 1.2 XSS攻击的防范")]),s._v(" "),a("p",[s._v("现在主流的浏览器内置了防范 XSS 的措施，例如 CSP。但对于开发者来说，也应该寻找可靠的解决方案来防止 XSS 攻击。")]),s._v(" "),a("h4",{attrs:{id:"_1-2-1-csp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-csp"}},[s._v("#")]),s._v(" 1.2.1 CSP")]),s._v(" "),a("p",[s._v("CSP 本质上就是建立白名单，开发者明确告诉浏览器哪些外部资源可以加载和执行。我们只需要配置规则，如何拦截是由浏览器自己实现的。我们可以通过这种方式来尽量减少 XSS 攻击。")]),s._v(" "),a("p",[s._v("通常可以通过两种方式来开启 CSP：")]),s._v(" "),a("ul",[a("li",[s._v("设置 HTTP Header 中的 Content-Security-Policy")]),s._v(" "),a("li",[s._v("置 meta 标签的方式")])]),s._v(" "),a("h4",{attrs:{id:"_1-2-2-httponly-防止劫取-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-httponly-防止劫取-cookie"}},[s._v("#")]),s._v(" 1.2.2 HttpOnly 防止劫取 Cookie")]),s._v(" "),a("p",[s._v("HttpOnly 最早由微软提出，至今已经成为一个标准。浏览器将禁止页面的Javascript 访问带有 HttpOnly 属性的Cookie。")]),s._v(" "),a("p",[s._v("上文有说到，攻击者可以通过注入恶意脚本获取用户的 Cookie 信息。通常 Cookie 中都包含了用户的登录凭证信息，攻击者在获取到 Cookie 之后，则可以发起 Cookie 劫持攻击。所以，严格来说，HttpOnly 并非阻止 XSS 攻击，而是能阻止 XSS 攻击后的 Cookie 劫持攻击。")]),s._v(" "),a("h4",{attrs:{id:"_1-2-3-输入检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-输入检查"}},[s._v("#")]),s._v(" 1.2.3 输入检查")]),s._v(" "),a("p",[s._v("不要相信用户的任何输入。 对于用户的任何输入要进行检查、过滤和转义。建立可信任的字符和 HTML 标签白名单，对于不在白名单之列的字符或者标签进行过滤或编码。")]),s._v(" "),a("p",[s._v("在 XSS 防御中，输入检查一般是检查用户输入的数据中是否包含 <，> 等特殊字符，如果存在，则对特殊字符进行过滤或编码，这种方式也称为 XSS Filter。")]),s._v(" "),a("p",[s._v("而在一些前端框架中，都会有一份 decodingMap， 用于对用户输入所包含的特殊字符或标签进行编码或过滤，如 "),a("strong",[s._v("<，>，script")]),s._v("，防止 XSS 攻击：")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("//javaScript\nfunction escape(str) {\n  str = str.replace(/&/g, '"),a("span",{pre:!0,attrs:{class:"token entity",title:"&"}},[s._v("&amp;")]),s._v("')\n  str = str.replace(/"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("g,")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("'&lt;')")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("str")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" str.replace(/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("/g, '"),a("span",{pre:!0,attrs:{class:"token entity",title:">"}},[s._v("&gt;")]),s._v("')\n  str = str.replace(/\"/g, '"),a("span",{pre:!0,attrs:{class:"token entity",title:"&quto;"}},[s._v("&quto;")]),s._v("')\n  str = str.replace(/'/g, '"),a("span",{pre:!0,attrs:{class:"token entity",title:"'"}},[s._v("&#39;")]),s._v("')\n  str = str.replace(/`/g, '"),a("span",{pre:!0,attrs:{class:"token entity",title:"&#96;"}},[s._v("&#96;")]),s._v("')\n  str = str.replace(/\\//g, '"),a("span",{pre:!0,attrs:{class:"token entity",title:"&#x2F;"}},[s._v("&#x2F;")]),s._v("')\n  return str\n}\n\n\n// vuejs 中的 decodingMap\n// 在 vuejs 中，如果输入带 script 标签的内容，会直接过滤掉\nconst decodingMap = {\n  '"),a("span",{pre:!0,attrs:{class:"token entity",title:"<"}},[s._v("&lt;")]),s._v("': '"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("',")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("'&gt;':")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("',\n  '"),a("span",{pre:!0,attrs:{class:"token entity",title:'"'}},[s._v("&quot;")]),s._v("': '\"',\n  '"),a("span",{pre:!0,attrs:{class:"token entity",title:"&"}},[s._v("&amp;")]),s._v("': '&',\n  '\n  ': '\\n'\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h4",{attrs:{id:"_1-2-4-输出检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-输出检查"}},[s._v("#")]),s._v(" 1.2.4 输出检查")]),s._v(" "),a("p",[s._v("用户的输入会存在问题，服务端的输出也会存在问题。一般来说，除富文本的输出外，在变量输出到 HTML 页面时，可以使用编码或转义的方式来防御 XSS 攻击。例如利用 sanitize-html 对输出内容进行有规则的过滤之后再输出到页面中。")]),s._v(" "),a("h2",{attrs:{id:"二、csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、csrf"}},[s._v("#")]),s._v(" 二、CSRF")]),s._v(" "),a("p",[s._v("CSRF，即 Cross Site Request Forgery，中译是跨站请求伪造，是一种劫持受信任用户向服务器发送非预期请求的攻击方式。")]),s._v(" "),a("p",[s._v("通常情况下，CSRF 攻击是攻击者借助受害者的 Cookie 骗取服务器的信任，可以在受害者毫不知情的情况下以受害者名义伪造请求发送给受攻击服务器，从而在并未授权的情况下执行在权限保护之下的操作。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/92f312f32342f313638386733d3434343837.png",alt:""}})]),s._v(" "),a("p",[s._v("完成 CSRF 攻击必须要有三个条件：")]),s._v(" "),a("ul",[a("li",[s._v("用户已经登录了站点 A，并在本地记录了 cookie")]),s._v(" "),a("li",[s._v("在用户没有登出站点 A 的情况下（也就是 cookie 生效的情况下），访问了恶意攻击者提供的引诱危险站点 B (B 站点要求访问站点A)。")]),s._v(" "),a("li",[s._v("站点 A 没有做任何 CSRF 防御")])]),s._v(" "),a("p",[s._v("在举例子之前，先说说浏览器的 Cookie 策略")]),s._v(" "),a("h3",{attrs:{id:"_2-1-浏览器的-cookie-策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-浏览器的-cookie-策略"}},[s._v("#")]),s._v(" 2.1 浏览器的 Cookie 策略")]),s._v(" "),a("p",[s._v("Cookie 是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。Cookie 主要用于以下三个方面：")]),s._v(" "),a("ul",[a("li",[s._v("会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）")]),s._v(" "),a("li",[s._v("个性化设置（如用户自定义设置、主题等）")])]),s._v(" "),a("p",[s._v("而浏览器所持有的 Cookie 分为两种：")]),s._v(" "),a("ul",[a("li",[s._v("Session Cookie(会话期 Cookie)：会话期 Cookie 是最简单的Cookie，它不需要指定过期时间（Expires）或者有效期（Max-Age），它仅在会话期内有效，浏览器关闭之后它会被自动删除。")]),s._v(" "),a("li",[s._v("Permanent Cookie(持久性 Cookie)：与会话期 Cookie 不同的是，持久性 Cookie 可以指定一个特定的过期时间（Expires）或有效期（Max-Age）。")])]),s._v(" "),a("blockquote",[a("p",[s._v("res.setHeader('Set-Cookie', ['mycookie=sdi#hb$', 'test=111; expires=Sat, 5 Jul 2020 00:00:00 GMT;']);")])]),s._v(" "),a("p",[s._v("此外，每个 Cookie 都会有与之关联的域，这个域的范围一般通过 donmain 属性指定。如果 Cookie 的域和页面的域相同，那么我们称这个 Cookie 为第一方 Cookie（first-party cookie），如果 Cookie 的域和页面的域不同，则称之为第三方 Cookie（third-party cookie）。一个页面包含图片或存放在其他域上的资源（如图片）时，第一方的 Cookie 也只会发送给设置它们的服务器。")]),s._v(" "),a("h3",{attrs:{id:"_2-2-通过-cookie-进行-csrf-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-通过-cookie-进行-csrf-攻击"}},[s._v("#")]),s._v(" 2.2 通过 Cookie 进行 CSRF 攻击")]),s._v(" "),a("p",[s._v("由于 Cookie 中包含了用户的认证信息，当用户访问攻击者准备的攻击环境时，攻击者就可以对服务器发起 CSRF 攻击。在这个攻击过程中，攻击者借助受害者的 Cookie 骗取服务器的信任，但并不能拿到 Cookie，也看不到 Cookie 的内容。而对于服务器返回的结果，由于浏览器同源策略的限制，攻击者也无法进行解析。因此，攻击者无法从返回的结果中得到任何东西，他所能做的就是给服务器发送请求，以执行请求中所描述的命令，在服务器端直接改变数据的值，而非窃取服务器中的数据。")]),s._v(" "),a("p",[s._v("但若 CSRF 攻击的目标并不需要使用 Cookie，则也不必顾虑浏览器的 Cookie 策略了。")]),s._v(" "),a("h3",{attrs:{id:"_2-3-csrf-攻击的防范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-csrf-攻击的防范"}},[s._v("#")]),s._v(" 2.3 CSRF 攻击的防范")]),s._v(" "),a("h4",{attrs:{id:"_2-3-1-验证码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-验证码"}},[s._v("#")]),s._v(" 2.3.1 验证码")]),s._v(" "),a("p",[s._v("验证码被认为是对抗 CSRF 攻击最简洁而有效的防御方法。")]),s._v(" "),a("p",[s._v("从上述示例中可以看出，CSRF 攻击往往是在用户不知情的情况下构造了网络请求。而验证码会强制用户必须与应用进行交互，才能完成最终请求。因为通常情况下，验证码能够很好地遏制 CSRF 攻击。"),a("strong",[s._v("但增加验证码降低了用户的体验，网站不能给所有的操作都加上验证码")]),s._v("。所以只能将验证码作为一种辅助手段，在关键业务点设置验证码。")]),s._v(" "),a("p",[s._v("但验证码并不是万能的，因为出于用户考虑，不能给网站所有的操作都加上验证码。因此，验证码只能作为防御 CSRF 的一种辅助手段，而不能作为最主要的解决方案。")]),s._v(" "),a("h4",{attrs:{id:"_2-3-2-referer-check"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-referer-check"}},[s._v("#")]),s._v(" 2.3.2 Referer Check")]),s._v(" "),a("p",[s._v("HTTP Referer是header的一部分，当浏览器向web服务器发送请求时，一般会带上Referer信息告诉服务器是从哪个页面链接过来的，服务器籍此可以获得一些信息用于处理。可以通过检查请求的来源来防御CSRF攻击。正常请求的referer具有一定规律，如在提交表单的referer必定是在该页面发起的请求。所以"),a("strong",[s._v("通过检查http包头referer的值是不是这个页面，来判断是不是CSRF攻击")]),s._v("。")]),s._v(" "),a("p",[s._v("比如，如果用户要删除自己的帖子，那么先要登录 www.c.com，然后找到对应的页面，发起删除帖子的请求。此时，Referer 的值是 http://www.c.com；当请求是从 www.a.com 发起时，Referer 的值是 http://www.a.com 了。因此，要防御 CSRF 攻击，只需要对于每一个删帖请求验证其 Referer 值，如果是以 www.c.com 开头的域名，则说明该请求是来自网站自己的请求，是合法的。如果 Referer 是其他网站的话，则有可能是 CSRF 攻击，可以拒绝该请求。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("referer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://www.baidu.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'csrf 攻击'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("Referer Check 不仅能防范 CSRF 攻击，另一个应用场景是 “防止图片盗链”。")]),s._v(" "),a("h4",{attrs:{id:"_2-3-3-添加-token-验证-token-令牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-添加-token-验证-token-令牌"}},[s._v("#")]),s._v(" 2.3.3 添加 token 验证(token==令牌)")]),s._v(" "),a("p",[s._v("CSRF 攻击之所以能够成功，是因为攻击者可以完全伪造用户的请求，该请求中所有的用户验证信息都是存在于 Cookie 中，因此攻击者可以在不知道这些验证信息的情况下直接利用用户自己的 Cookie 来通过安全验证。要抵御 CSRF，关键在于在请求中放入攻击者所不能伪造的信息，并且该信息不存在于 Cookie 之中。可以在 HTTP 请求中以参数的形式加入一个随机产生的 "),a("strong",[s._v("token")]),s._v("，并在服务器端建立一个拦截器来验证这个 token，如果请求中没有 "),a("strong",[s._v("token")]),s._v(" 或者 "),a("strong",[s._v("token")]),s._v("内容不正确，则认为可能是 CSRF 攻击而拒绝该请求。")]),s._v(" "),a("h4",{attrs:{id:"_2-3-4-samesite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-samesite"}},[s._v("#")]),s._v(" 2.3.4 SameSite")]),s._v(" "),a("p",[s._v("可以对 Cookie 设置 SameSite 属性。该属性表示 Cookie 不随着跨域请求发送，可以很大程度减少 CSRF 的攻击，但是该属性目前并不是所有浏览器都兼容。")]),s._v(" "),a("h2",{attrs:{id:"三、点击劫持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、点击劫持"}},[s._v("#")]),s._v(" 三、点击劫持")]),s._v(" "),a("p",[s._v("点击劫持是一种视觉欺骗的攻击手段。攻击者将需要攻击的网站通过 iframe 嵌套的方式嵌入自己的网页中，并将 iframe 设置为透明，在页面中透出一个按钮诱导用户点击。")]),s._v(" "),a("p",[a("strong",[s._v("特点")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("隐蔽性较高，骗取用户操作")]),s._v(" "),a("li",[s._v('"UI-覆盖攻击"')]),s._v(" "),a("li",[s._v("利用iframe或者其它标签的属性")])]),s._v(" "),a("h3",{attrs:{id:"如何防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防御"}},[s._v("#")]),s._v(" 如何防御")]),s._v(" "),a("h4",{attrs:{id:"_1-x-frame-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-frame-options"}},[s._v("#")]),s._v(" 1.X-FRAME-OPTIONS")]),s._v(" "),a("p",[a("code",[s._v("X-FRAME-OPTIONS")]),s._v("是一个 HTTP 响应头，在现代浏览器有一个很好的支持。这个 HTTP 响应头 就是为了防御用 iframe 嵌套的点击劫持攻击。")]),s._v(" "),a("p",[s._v("该响应头有三个值可选")]),s._v(" "),a("ul",[a("li",[s._v("DENY，表示页面不允许通过 iframe 的方式展示")]),s._v(" "),a("li",[s._v("SAMEORIGIN，表示页面可以在相同域名下通过 iframe 的方式展示")]),s._v(" "),a("li",[s._v("ALLOW-FROM，表示页面可以在指定来源的 iframe 中展示")])]),s._v(" "),a("h4",{attrs:{id:"_2-javascript-防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-javascript-防御"}},[s._v("#")]),s._v(" 2.JavaScript 防御")]),s._v(" "),a("p",[s._v("对于某些远古浏览器来说，并不能支持上面的这种方式，那我们只有通过 JS 的方式来防御点击劫持了")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("style id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"click-jack"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    html "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      display"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" none "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("important"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" style "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'click-jack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"四、url跳转漏洞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、url跳转漏洞"}},[s._v("#")]),s._v(" 四、URL跳转漏洞")]),s._v(" "),a("p",[s._v("借助未验证的URL跳转，将应用程序引导到不安全的第三方区域，从而导致的安全问题")]),s._v(" "),a("h3",{attrs:{id:"_1-url跳转漏洞原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-url跳转漏洞原理"}},[s._v("#")]),s._v(" 1.URL跳转漏洞原理")]),s._v(" "),a("p",[s._v("黑客利用URL跳转漏洞来诱导安全意识低的用户点击，导致用户信息泄露或者资金的流失。其原理是黑客构建恶意链接(链接需要进行伪装,尽可能迷惑),发在QQ群或者是浏览量多的贴吧/论坛中。\n安全意识低的用户点击后,经过服务器或者浏览器解析后，跳到恶意的网站中。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/83d313333632393032.png",alt:""}})]),s._v(" "),a("p",[s._v("恶意链接需要进行伪装,经常的做法是熟悉的链接后面加上一个恶意的网址，这样才迷惑用户。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/663d706e6726733d3837313636.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("实现方式")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("Header头跳转")]),s._v(" "),a("li",[s._v("Javascript跳转")]),s._v(" "),a("li",[s._v("META标签跳转")])]),s._v(" "),a("h3",{attrs:{id:"_2-如何防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何防御"}},[s._v("#")]),s._v(" 2. 如何防御")]),s._v(" "),a("h4",{attrs:{id:"_1-referer的限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-referer的限制"}},[s._v("#")]),s._v(" 1.referer的限制")]),s._v(" "),a("p",[s._v("如果确定传递URL参数进入的来源，我们可以通过该方式实现安全限制，保证该URL的有效性，避免恶意用户自己生成跳转链接")]),s._v(" "),a("h4",{attrs:{id:"_2-加入有效性验证token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-加入有效性验证token"}},[s._v("#")]),s._v(" 2.加入有效性验证Token")]),s._v(" "),a("p",[s._v("我们保证所有生成的链接都是来自于我们可信域的，通过在生成的链接里加入用户不可控的Token对生成的链接进行校验，可以避免用户生成自己的恶意链接从而被利用，但是如果功能本身要求比较开放，可能导致有一定的限制。")]),s._v(" "),a("h2",{attrs:{id:"五、sql注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、sql注入"}},[s._v("#")]),s._v(" 五、SQL注入")]),s._v(" "),a("h3",{attrs:{id:"_1-sql注入的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-sql注入的原理"}},[s._v("#")]),s._v(" 1.SQL注入的原理")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/706e6726733d313135363434.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("form action"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/login"')]),s._v(" method"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POST"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Password"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"password"')]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"password"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"submit"')]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"登陆"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("form"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("后端的 SQL 语句可能是如下这样的：")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v("let querySQL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" `\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" user\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("WHERE")]),s._v(" username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'${username}'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AND")]),s._v(" psw"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'${password}'")]),s._v("\n`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这是我们经常见到的登录页面，但如果有一个恶意攻击者输入的用户名是 "),a("code",[s._v("admin' --")]),s._v("，密码随意输入，就可以直接登入系统了。why! ----这就是SQL注入")]),s._v(" "),a("p",[s._v("我们之前预想的SQL 语句是:")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--' AND psw='xxxx'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在 SQL 中,"),a("code",[s._v("' --")]),s._v("是闭合和注释的意思，-- 是注释后面的内容的意思，所以查询语句就变成了：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" username"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("所谓的万能密码,本质上就是SQL注入的一种利用方式。")]),s._v(" "),a("p",[s._v("一次SQL注入的过程包括以下几个过程：")]),s._v(" "),a("ul",[a("li",[s._v("获取用户请求参数")]),s._v(" "),a("li",[s._v("拼接到代码当中")]),s._v(" "),a("li",[s._v("SQL语句按照我们构造参数的语义执行成功")])]),s._v(" "),a("p",[a("strong",[s._v("SQL注入的必备条件：")])]),s._v(" "),a("p",[a("strong",[s._v("1.可以控制输入的数据\n2.服务器要执行的代码拼接了控制的数据")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/d706e6726733d3634323634.png",alt:""}})]),s._v(" "),a("p",[s._v("我们会发现SQL注入流程中与正常请求服务器类似，只是黑客控制了数据，构造了SQL查询，而正常的请求不会SQL查询这一步，"),a("strong",[s._v("SQL注入的本质:数据和代码未分离，即数据当做了代码来执行")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_2-危害"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-危害"}},[s._v("#")]),s._v(" 2.危害")]),s._v(" "),a("ul",[a("li",[s._v("获取数据库信息\n"),a("ul",[a("li",[s._v("管理员后台用户名和密码")]),s._v(" "),a("li",[s._v("获取其他数据库敏感信息：用户名、密码、手机号码、身份证、银行卡信息……")]),s._v(" "),a("li",[s._v("整个数据库：脱裤")])])]),s._v(" "),a("li",[s._v("获取服务器权限")]),s._v(" "),a("li",[s._v("植入Webshell，获取服务器后门")]),s._v(" "),a("li",[s._v("读取服务器敏感文件")])]),s._v(" "),a("h3",{attrs:{id:"_3-如何防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何防御"}},[s._v("#")]),s._v(" 3.如何防御")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("严格限制Web应用的数据库的操作权限")]),s._v("，给此用户提供仅仅能够满足其工作的最低权限，从而最大限度的减少注入攻击对数据库的危害")]),s._v(" "),a("li",[a("strong",[s._v("后端代码检查输入的数据是否符合预期")]),s._v("，严格限制变量的类型，例如使用正则表达式进行一些匹配处理。")]),s._v(" "),a("li",[a("strong",[s._v("对进入数据库的特殊字符（'，\"，\\，<，>，&，*，; 等）进行转义处理，或编码转换")]),s._v("。基本上所有的后端语言都有对字符串进行转义处理的方法，比如 lodash 的 lodash._escapehtmlchar 库。")]),s._v(" "),a("li",[a("strong",[s._v("所有的查询语句建议使用数据库提供的参数化查询接口")]),s._v("，参数化的语句使用参数而不是将用户输入变量嵌入到 SQL 语句中，即不要直接拼接 SQL 语句。例如 Node.js 中的 mysqljs 库的 query 方法中的 ? 占位参数。")])]),s._v(" "),a("h2",{attrs:{id:"六、os命令注入攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、os命令注入攻击"}},[s._v("#")]),s._v(" 六、OS命令注入攻击")]),s._v(" "),a("p",[s._v("OS命令注入和SQL注入差不多，只不过SQL注入是针对数据库的，而OS命令注入是针对操作系统的。OS命令注入攻击指通过Web应用，执行非法的操作系统命令达到攻击的目的。只要在能调用Shell函数的地方就有存在被攻击的风险。倘若调用Shell时存在疏漏，就可以执行插入的非法命令。")]),s._v(" "),a("p",[s._v("命令注入攻击可以向Shell发送命令，让Windows或Linux操作系统的命令行启动程序。也就是说，通过命令注入攻击可执行操作系统上安装着的各种程序。")]),s._v(" "),a("h3",{attrs:{id:"_1-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理"}},[s._v("#")]),s._v(" 1.原理")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog-vuepress/2020/0520/31353426663d706e6726733d3335353739.png",alt:""}})]),s._v(" "),a("p",[s._v("黑客构造命令提交给web应用程序，web应用程序提取黑客构造的命令，拼接到被执行的命令中，因黑客注入的命令打破了原有命令结构，导致web应用执行了额外的命令，最后web应用程序将执行的结果输出到响应页面中。")]),s._v(" "),a("p",[s._v("我们通过一个例子来说明其原理，假如需要实现一个需求：用户提交一些内容到服务器，然后在服务器执行一些系统命令去返回一个结果给用户")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以 Node.js 为例，假如在接口中需要从 github 下载用户指定的 repo")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" exec "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mz/child_process'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" params "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 用户输入的参数 */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("git clone ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("repo"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" /some/path")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果 "),a("code",[s._v("params.repo")]),s._v(" 传入的是 "),a("code",[s._v("https://github.com/admin/admin.github.io.git")]),s._v(" 确实能从指定的 git repo 上下载到想要的代码。\n但是如果 "),a("code",[s._v("paras.repo")]),s._v(" 传入的是 "),a("code",[s._v("https://github.com/xx/xx.git && rm -rf /* &&")]),s._v(" 恰好你的服务是用 root 权限起的就糟糕了。")]),s._v(" "),a("h3",{attrs:{id:"_2-如何防御-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何防御-2"}},[s._v("#")]),s._v(" 2.如何防御")]),s._v(" "),a("ul",[a("li",[s._v("后端对前端提交内容进行规则限制（比如正则表达式）。")]),s._v(" "),a("li",[s._v("在调用系统命令前对所有传入参数进行命令行参数转义过滤。")]),s._v(" "),a("li",[s._v("不要直接拼接命令语句，借助一些工具做拼接、转义预处理，例如 Node.js 的 "),a("code",[s._v("shell-escape npm")]),s._v("包")])]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("最后，总结一下 XSS 攻击和 CSRF 攻击的常见防御措施：")]),s._v(" "),a("p",[s._v("1.防御XSS攻击")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("CSP")])]),s._v(" "),a("li",[a("p",[s._v("HttpOnly 防止劫取 Cookie")])]),s._v(" "),a("li",[a("p",[s._v("用户的输入检查")])]),s._v(" "),a("li",[a("p",[s._v("服务端的输出检查")])])]),s._v(" "),a("p",[s._v("2.防御CSRF攻击")]),s._v(" "),a("ul",[a("li",[s._v("验证码")]),s._v(" "),a("li",[s._v("Referer Check")]),s._v(" "),a("li",[s._v("Token 验证")]),s._v(" "),a("li",[s._v("SameSite")])])])}),[],!1,null,null,null);t.default=r.exports}}]);