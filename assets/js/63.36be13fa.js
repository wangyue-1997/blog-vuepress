(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{390:function(t,_,v){"use strict";v.r(_);var s=v(3),a=Object(s.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-33434c4b3e2b800d.png",alt:""}})]),t._v(" "),v("p",[t._v("总体来说分为以下几个过程:")]),t._v(" "),v("ul",[v("li",[t._v("DNS 解析：将域名解析成 IP 地址")]),t._v(" "),v("li",[t._v("TCP 连接：TCP 三次握手")]),t._v(" "),v("li",[t._v("发送 HTTP 请求")]),t._v(" "),v("li",[t._v("服务器处理请求并返回 HTTP 报文")]),t._v(" "),v("li",[t._v("浏览器解析渲染页面")]),t._v(" "),v("li",[t._v("断开连接：TCP 四次挥手")])]),t._v(" "),v("h2",{attrs:{id:"一、url-到底是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、url-到底是什么"}},[t._v("#")]),t._v(" 一、URL 到底是什么")]),t._v(" "),v("p",[t._v("URL（Uniform Resource Locator），统一资源定位符，用于定位互联网上资源，俗称网址。")]),t._v(" "),v("p",[v("code",[t._v("http://host.domain:port/path/filename")])]),t._v(" "),v("p",[t._v("http - 常见的协议有 http、https、ftp、file，其中最常见的类型是 http，而 https 则是进行加密的网络传输。")]),t._v(" "),v("p",[t._v("host - 定义域主机（http 的默认主机是 www）")]),t._v(" "),v("p",[t._v("domain - 定义因特网"),v("strong",[t._v("域名")]),t._v("，比如 w3school.com.cn")]),t._v(" "),v("p",[t._v("port - 定义主机上的端口号（http 的默认端口号是 80）")]),t._v(" "),v("p",[t._v("path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）")]),t._v(" "),v("p",[t._v("filename - 定义文档/资源的名称")]),t._v(" "),v("h2",{attrs:{id:"二、域名解析（dns）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、域名解析（dns）"}},[t._v("#")]),t._v(" 二、域名解析（DNS）")]),t._v(" "),v("p",[t._v("在浏览器输入网址后，首先要经过域名解析，因为浏览器并不能直接通过域名找到对应的服务器，而是要通过 IP 地址。")]),t._v(" "),v("h3",{attrs:{id:"_1-ip-地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-ip-地址"}},[t._v("#")]),t._v(" 1.IP 地址")]),t._v(" "),v("p",[t._v("IP 地址是指互联网协议地址，是 IP Address 的缩写。IP 地址是 IP 协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。IP 地址是一个 32 位的二进制数，比如 127.0.0.1 为本机 IP。")]),t._v(" "),v("p",[v("strong",[t._v("域名就相当于 IP 地址乔装打扮的伪装者，带着一副面具。它的作用就是便于记忆和沟通的一组服务器的地址")]),t._v("。用户通常使用主机名或域名来访问对方的计算机，而不是直接通过 IP 地址访问。"),v("strong",[t._v("因为与 IP 地址的一组纯数字相比，用字母配合数字的表示形式来指定计算机名更符合人类的记忆习惯。但要让计算机去理解名称，相对而言就变得困难了。因为计算机更擅长处理一长串数字。为了解决上述的问题，DNS 服务应运而生")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"_2-域名解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-域名解析"}},[t._v("#")]),t._v(" 2. 域名解析")]),t._v(" "),v("p",[t._v("DNS 协议提供通过域名查找 IP 地址，或逆向从 IP 地址反查域名的服务。"),v("strong",[t._v("DNS 是一个网络服务器，我们的域名解析简单来说就是在 DNS 上记录一条信息记录")]),t._v("。")]),t._v(" "),v("blockquote",[v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("例如 baidu.com  220.114.23.56（服务器外网IP地址）80（服务器端口号）\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])])]),t._v(" "),v("h3",{attrs:{id:"_3-浏览器如何通过域名去查询-url-对应的-ip-呢"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器如何通过域名去查询-url-对应的-ip-呢"}},[t._v("#")]),t._v(" 3.浏览器如何通过域名去查询 URL 对应的 IP 呢")]),t._v(" "),v("ul",[v("li",[t._v("浏览器缓存：浏览器会按照一定的频率缓存 DNS 记录")]),t._v(" "),v("li",[t._v("操作系统缓存：如果浏览器缓存中找不到需要的 DNS 记录，那就去操作系统中找")]),t._v(" "),v("li",[t._v("路由缓存：路由器也有 DNS 缓存")]),t._v(" "),v("li",[t._v("ISP 的 DNS 服务器：ISP 是互联网服务提供商(Internet Service Provider)的简称，ISP 有专门的 DNS 服务器应对 DNS 查询请求")]),t._v(" "),v("li",[t._v("根服务器：ISP 的 DNS 服务器还找不到的话，它就会向根服务器发出请求，进行递归查询（DNS 服务器先问根域名服务器.com 域名服务器的 IP 地址，然后再问.baidu 域名服务器，依次类推）")])]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-7a399b7f386e8984.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_4-小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-小结"}},[t._v("#")]),t._v(" 4.小结")]),t._v(" "),v("p",[v("strong",[t._v("浏览器通过向 DNS 服务器发送域名，DNS 服务器查询到与域名相对应的 IP 地址，然后返回给浏览器，浏览器再将 IP 地址打在协议上，同时请求参数也会在协议搭载，然后一并发送给对应的服务器。接下来介绍向服务器发送 HTTP 请求阶段，HTTP 请求分为三个部分：TCP 三次握手、http 请求响应信息、关闭 TCP 连接")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-a912ecaf040f181d.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"三、tcp-三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、tcp-三次握手"}},[t._v("#")]),t._v(" 三、TCP 三次握手")]),t._v(" "),v("p",[v("strong",[t._v("在客户端发送数据之前会发起 TCP 三次握手用以同步客户端和服务端的序列号和确认号，并交换 TCP 窗口大小信息")])]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-dacaa7a974bea081.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_1-tcp-三次握手的过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp-三次握手的过程"}},[t._v("#")]),t._v(" 1.TCP 三次握手的过程")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("客户端发送一个带 SYN=1，Seq=X 的数据包到服务器端口")]),t._v("（第一次握手，由浏览器发起，告诉服务器我要发送请求了）")]),t._v(" "),v("li",[v("strong",[t._v("服务器发回一个带 SYN=1， ACK=X+1， Seq=Y 的响应包以示传达确认信息")]),t._v("（第二次握手，由服务器发起，告诉浏览器我准备接受了，你赶紧发送吧）")]),t._v(" "),v("li",[v("strong",[t._v("客户端再回传一个带 ACK=Y+1， Seq=Z 的数据包，代表“握手结束”")]),t._v("（第三次握手，由浏览器发送，告诉服务器，我马上就发了，准备接受吧）")])]),t._v(" "),v("h3",{attrs:{id:"_2-为啥需要三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-为啥需要三次握手"}},[t._v("#")]),t._v(" 2.为啥需要三次握手")]),t._v(" "),v("p",[t._v("为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误")]),t._v(" "),v("h2",{attrs:{id:"四、发送-http-请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、发送-http-请求"}},[t._v("#")]),t._v(" 四、发送 HTTP 请求")]),t._v(" "),v("p",[v("strong",[t._v("TCP 三次握手结束后，开始发送 HTTP 请求报文")])]),t._v(" "),v("p",[t._v("请求报文由请求行（request line）、请求头（header）、请求体四个部分组成,如下图所示：")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-516d8337f584afc7.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_1-请求行包含请求方法、url、协议版本"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求行包含请求方法、url、协议版本"}},[t._v("#")]),t._v(" 1.请求行包含请求方法、URL、协议版本")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("请求方法包含 8 种：GET、POST、PUT、DELETE、PATCH、HEAD、OPTIONS、TRACE")])]),t._v(" "),v("li",[v("p",[t._v("URL 即请求地址，由 <协议>：//<主机>：<端口>/<路径>?<参数> 组成")])]),t._v(" "),v("li",[v("p",[t._v("协议版本即 http 版本号")])])]),t._v(" "),v("blockquote",[v("p",[t._v("POST /chapter17/user.html  HTTP/1.1")])]),t._v(" "),v("h3",{attrs:{id:"_2-请求头包含请求的附加信息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求头包含请求的附加信息"}},[t._v("#")]),t._v(" 2.请求头包含请求的附加信息")]),t._v(" "),v("p",[t._v("请求头部通知服务器有关于客户端请求的信息。它包含许多有关的客户端环境和请求正文的有用信息。其中比如："),v("strong",[t._v("Host，表示主机名，虚拟主机；Connection,HTTP/1.1 增加的，使用 keepalive，即持久连接，一个连接可以发多个请求；User-Agent，请求发出者，兼容性以及定制化需求")])]),t._v(" "),v("h3",{attrs:{id:"_3-请求体"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-请求体"}},[t._v("#")]),t._v(" 3.请求体")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("name=tom&password=1234&realName=tomson\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("h2",{attrs:{id:"五、服务器处理请求并返回-http-报文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、服务器处理请求并返回-http-报文"}},[t._v("#")]),t._v(" 五、服务器处理请求并返回 HTTP 报文")]),t._v(" "),v("h3",{attrs:{id:"_1-服务器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-服务器"}},[t._v("#")]),t._v(" 1.服务器")]),t._v(" "),v("p",[t._v("服务器是网络环境中的高性能计算机，它侦听网络上的其他计算机（客户机）提交的服务请求，并提供相应的服务，比如网页服务、文件下载服务、邮件服务、视频服务。而客户端主要的功能是浏览网页、看视频、听音乐等等，两者截然不同。 每台服务器上都会安装处理请求的应用——web server。常见的 web server 产品有 apache、nginx、IIS 或 Lighttpd 等。")]),t._v(" "),v("p",[v("strong",[t._v("web server 担任管控的角色")]),t._v("，对于不同用户发送的请求，会结合配置文件，把不同请求委托给服务器上处理相应请求的程序进行处理（例如 CGI 脚本，JSP 脚本，servlets，ASP 脚本，服务器端 JavaScript，或者一些其它的服务器端技术等），然后返回后台程序处理产生的结果作为响应。")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-abd7f42c1ddc8f53.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_2-mvc-后台处理阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-mvc-后台处理阶段"}},[t._v("#")]),t._v(" 2.MVC 后台处理阶段")]),t._v(" "),v("p",[t._v("后台开发现在有很多框架，但大部分都还是按照 MVC 设计模式进行搭建的。\nMVC 是一个设计模式，将应用程序分成三个核心部件：模型（model）-- 视图（view）--控制器（controller），它们各自处理自己的任务，实现输入、处理和输出的分离。")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-74dc172f507ec25d.png",alt:""}})]),t._v(" "),v("ol",[v("li",[t._v("视图（view）："),v("strong",[t._v("它是提供给用户的操作界面，是程序的外壳")])]),t._v(" "),v("li",[t._v("模型（model）："),v("strong",[t._v("模型主要负责数据交互")]),t._v("。在 MVC 的三个部件中，模型拥有最多的处理任务。一个模型能为多个视图提供数据")]),t._v(" "),v("li",[t._v("控制器（controller）："),v("strong",[t._v('它负责根据用户从"视图层"输入的指令，选取"模型层"中的数据，然后对其进行相应的操作，产生最终结果')]),t._v("。控制器属于管理者角色，从视图接收请求并决定调用哪个模型构件去处理请求，然后再确定用哪个视图来显示模型处理返回的数据。")])]),t._v(" "),v("p",[t._v("这三层是紧密联系在一起的，但又是互相独立的，每一层内部的变化不影响其他层。每一层都对外提供接口（Interface），供上面一层调用。")]),t._v(" "),v("p",[v("strong",[t._v("首先浏览器发送过来的请求先经过控制器，控制器进行逻辑处理和请求分发，接着会调用模型，这一阶段模型会获取 redis db 以及 MySQL 的数据，获取数据后将渲染好的页面，响应信息会以响应报文的形式返回给客户端，最后浏览器通过渲染引擎将网页呈现在用户面前")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"_3-http-响应报文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-响应报文"}},[t._v("#")]),t._v(" 3.http 响应报文")]),t._v(" "),v("p",[t._v("响应报文由响应行（request line）、响应头部（header）、响应主体三个部分组成。如下图所示：")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-ff7bfc0acaf859cd.png",alt:""}})]),t._v(" "),v("ul",[v("li",[t._v("响应行包含：协议版本，状态码，状态码描述")])]),t._v(" "),v("p",[t._v("状态码规则如下：")]),t._v(" "),v("p",[t._v("1xx：指示信息--表示请求已接收，继续处理。\n2xx：成功--表示请求已被成功接收、理解、接受。\n3xx：重定向--要完成请求必须进行更进一步的操作。\n4xx：客户端错误--请求有语法错误或请求无法实现。\n5xx：服务器端错误--服务器未能实现合法的请求。")]),t._v(" "),v("ul",[v("li",[t._v("响应头部包含响应报文的附加信息，由 名/值 对组成")]),t._v(" "),v("li",[t._v("响应主体包含回车符、换行符和响应返回数据，并不是所有响应报文都有响应数据")])]),t._v(" "),v("h2",{attrs:{id:"六、浏览器解析渲染页面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、浏览器解析渲染页面"}},[t._v("#")]),t._v(" 六、浏览器解析渲染页面")]),t._v(" "),v("p",[t._v("浏览器拿到响应文本 HTML 后，接下来介绍下浏览器渲染机制")]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-e058db8e90d40760.png",alt:""}})]),t._v(" "),v("p",[t._v("浏览器解析渲染页面分为一下五个步骤：")]),t._v(" "),v("ul",[v("li",[t._v("根据 HTML 解析出 DOM 树")]),t._v(" "),v("li",[t._v("根据 CSS 解析生成 CSS 规则树")]),t._v(" "),v("li",[t._v("结合 DOM 树和 CSS 规则树，生成渲染树")]),t._v(" "),v("li",[t._v("根据渲染树计算每一个节点的信息")]),t._v(" "),v("li",[t._v("根据计算好的信息绘制页面")])]),t._v(" "),v("h3",{attrs:{id:"_1-根据-html-解析-dom-树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-根据-html-解析-dom-树"}},[t._v("#")]),t._v(" 1.根据 HTML 解析 DOM 树")]),t._v(" "),v("ul",[v("li",[t._v("根据 HTML 的内容，将标签按照结构解析成为 DOM 树，DOM 树解析的过程是一个深度优先遍历。即先构建当前节点的所有子节点，再构建下一个兄弟节点")]),t._v(" "),v("li",[t._v("在读取 HTML 文档，构建 DOM 树的过程中，若遇到 script 标签，则 DOM 树的构建会暂停，直至脚本执行完毕")])]),t._v(" "),v("h3",{attrs:{id:"_2-根据-css-解析生成-css-规则树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-根据-css-解析生成-css-规则树"}},[t._v("#")]),t._v(" 2.根据 CSS 解析生成 CSS 规则树")]),t._v(" "),v("ul",[v("li",[t._v("解析 CSS 规则树时 js 执行将暂停，直至 CSS 规则树就绪")]),t._v(" "),v("li",[t._v("浏览器在 CSS 规则树生成之前不会进行渲染")])]),t._v(" "),v("h3",{attrs:{id:"_3-结合-dom-树和-css-规则树，生成渲染树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-结合-dom-树和-css-规则树，生成渲染树"}},[t._v("#")]),t._v(" 3.结合 DOM 树和 CSS 规则树，生成渲染树")]),t._v(" "),v("ul",[v("li",[t._v("DOM 树和 CSS 规则树全部准备好了以后，浏览器才会开始构建渲染树")]),t._v(" "),v("li",[t._v("精简 CSS 并可以加快 CSS 规则树的构建，从而加快页面相应速度")])]),t._v(" "),v("h3",{attrs:{id:"_4-根据渲染树计算每一个节点的信息（布局）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-根据渲染树计算每一个节点的信息（布局）"}},[t._v("#")]),t._v(" 4.根据渲染树计算每一个节点的信息（布局）")]),t._v(" "),v("ul",[v("li",[t._v("布局：通过渲染树中渲染对象的信息，计算出每一个渲染对象的位置和尺寸")]),t._v(" "),v("li",[t._v("回流：在布局完成后，发现了某个部分发生了变化影响了布局，那就需要倒回去重新渲染")])]),t._v(" "),v("h3",{attrs:{id:"_5-根据计算好的信息绘制页面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-根据计算好的信息绘制页面"}},[t._v("#")]),t._v(" 5.根据计算好的信息绘制页面")]),t._v(" "),v("ul",[v("li",[t._v("绘制阶段，系统会遍历呈现树，并调用呈现器的“paint”方法，将呈现器的内容显示在屏幕上")]),t._v(" "),v("li",[t._v("重绘：某个元素的背景颜色，文字颜色等，不影响元素周围或内部布局的属性，将只会引起浏览器的重绘")]),t._v(" "),v("li",[t._v("回流：某个元素的尺寸发生了变化，则需重新计算渲染树，重新渲染")])]),t._v(" "),v("h2",{attrs:{id:"七、断开连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七、断开连接"}},[t._v("#")]),t._v(" 七、断开连接")]),t._v(" "),v("p",[v("strong",[t._v("当数据传送完毕，需要断开 tcp 连接，此时发起 tcp 四次挥手")])]),t._v(" "),v("p",[v("img",{attrs:{src:"/blog-vuepress/2020/1020/3174701-56122d5811fef0b1.png",alt:""}})]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("发起方向被动方发送报文，Fin、Ack、Seq，表示已经没有数据传输了。并进入 FIN_WAIT_1 状态")]),t._v("。(第一次挥手：由浏览器发起的，发送给服务器，我请求报文发送完了，你准备关闭吧)")]),t._v(" "),v("li",[v("strong",[t._v("被动方发送报文，Ack、Seq，表示同意关闭请求。此时主机发起方进入 FIN_WAIT_2 状态")]),t._v("。(第二次挥手：由服务器发起的，告诉浏览器，我请求报文接受完了，我准备关闭了，你也准备吧)")]),t._v(" "),v("li",[v("strong",[t._v("被动方向发起方发送报文段，Fin、Ack、Seq，请求关闭连接。并进入 LAST_ACK 状态")]),t._v("。(第三次挥手：由服务器发起，告诉浏览器，我响应报文发送完了，你准备关闭吧)")]),t._v(" "),v("li",[v("strong",[t._v("发起方向被动方发送报文段，Ack、Seq。然后进入等待 TIME_WAIT 状态。被动方收到发起方的报文段以后关闭连接。发起方等待一定时间未收到回复，则正常关闭")]),t._v("。(第四次挥手：由浏览器发起，告诉服务器，我响应报文接受完了，我准备关闭了，你也准备吧)")])])])}),[],!1,null,null,null);_.default=a.exports}}]);