(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{339:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-媒体查询，css动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-媒体查询，css动画"}},[t._v("#")]),t._v(" 1.媒体查询，css动画")]),t._v(" "),a("p",[t._v("媒体查询：@media 查询，你可以针对不同的媒体类型定义不同的样式")]),t._v(" "),a("p",[t._v("css动画：animation:changeColor 3s infinite")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" changeColor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"_2-跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨域问题"}},[t._v("#")]),t._v(" 2.跨域问题")]),t._v(" "),a("p",[t._v("常见的跨域")]),t._v(" "),a("ol",[a("li",[t._v("资源跳转： 超链接、重定向、表单提交")]),t._v(" "),a("li",[t._v("资源嵌入："),a("strong",[t._v("link、script、img、frame")]),t._v("等dom标签，还有样式中background:url()、@font-face()等文件外链")]),t._v(" "),a("li",[t._v("脚本请求： js发起的ajax请求、dom和js对象的跨域操作等")])]),t._v(" "),a("p",[t._v("解决方案：")]),t._v(" "),a("p",[t._v("（1）CORS是一个跨域资源共享方案，为了解决跨域问题，通过增加一系列请求头和响应头，规范安全地进行跨站数据传输")]),t._v(" "),a("p",[t._v("（2）JSONP 跨域的原理就是借助HTML中的"),a("strong",[t._v("script")]),t._v("标签可以跨域引入资源。所以动态创建一个"),a("strong",[t._v("script")]),t._v("标签，src为目的接口 + get数据包 + 处理数据的函数名。后台收到GET请求后解析并返回函数名(数据)给前端，前端"),a("strong",[t._v("script")]),t._v("标签动态执行处理函数")]),t._v(" "),a("p",[t._v("（3）nginx 反向代理实现跨域")]),t._v(" "),a("p",[t._v("（4）window.name + iframe 跨域")]),t._v(" "),a("p",[t._v("（5）window.postMessage")]),t._v(" "),a("p",[t._v("（6）代理页面 + iframe 实现跨域访问")]),t._v(" "),a("h2",{attrs:{id:"_3-js闭包，通过闭包封装常量，闭包如何做到变量防止污染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-js闭包，通过闭包封装常量，闭包如何做到变量防止污染"}},[t._v("#")]),t._v(" 3.js闭包，通过闭包封装常量，闭包如何做到变量防止污染")]),t._v(" "),a("p",[t._v("什么是闭包：函数嵌套时内层函数引用了外层函数作用域下的变量，并且外层函数在全局环境下可访问，就形成了闭包")]),t._v(" "),a("p",[t._v("1、函数套函数。")]),t._v(" "),a("p",[t._v("2、内部函数可以访问外部函数的变量。")]),t._v(" "),a("p",[t._v("3、局部变量，垃圾回收机制无法收回。")]),t._v(" "),a("h2",{attrs:{id:"_4-var-let-const的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-var-let-const的区别"}},[t._v("#")]),t._v(" 4.var let const的区别")]),t._v(" "),a("p",[t._v("(1)在ES6之前都是用"),a("strong",[t._v("var")]),t._v("声明变量，var没有块的概念，可以跨块访问, 不能跨函数访问。")]),t._v(" "),a("p",[t._v("(2)现在我们通常用 "),a("strong",[t._v("let")]),t._v(" 和 "),a("strong",[t._v("const")]),t._v("  来声明，let 表示变量、const 表示常量。let 和 const 都是块级作用域。")]),t._v(" "),a("h2",{attrs:{id:"_5-同步和异步的区别，哪些函数或者操作是异步执行的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-同步和异步的区别，哪些函数或者操作是异步执行的"}},[t._v("#")]),t._v(" 5.同步和异步的区别，哪些函数或者操作是异步执行的")]),t._v(" "),a("p",[t._v("同步：当向服务器发送一个请求，只有等服务器返回结果才执行下一步")]),t._v(" "),a("p",[t._v("异步：当向服务器发送一个请求 ，直接进行下一步，服务器返回的结果会通过回调函数执行")]),t._v(" "),a("p",[t._v("异步操作的：")]),t._v(" "),a("p",[t._v("(1)setTimeOut、定时器")]),t._v(" "),a("p",[t._v("(2)AJAXQ请求")]),t._v(" "),a("h2",{attrs:{id:"_6-promise构造函数的机制是怎样的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-promise构造函数的机制是怎样的"}},[t._v("#")]),t._v(" 6.promise构造函数的机制是怎样的")]),t._v(" "),a("p",[t._v("Promise是以同步的方式编写异步代码")]),t._v(" "),a("p",[t._v("由于JS中异步编程都是采用回调函数和事件方式，会出现回调多层嵌套，代码多而且难以维护")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reslove"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("reject")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"_7-async-await有什么不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-async-await有什么不同"}},[t._v("#")]),t._v(" 7.async/await有什么不同")]),t._v(" "),a("p",[t._v("async是异步函数，返回值为Promise")]),t._v(" "),a("p",[t._v("await 不仅仅用于等 Promise 对象，它可以等任意表达式的结果")]),t._v(" "),a("p",[t._v("async/await 的优势在于处理 then 链")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"_8-js单线程，eventloop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-js单线程，eventloop"}},[t._v("#")]),t._v(" 8.js单线程，EventLoop")]),t._v(" "),a("p",[t._v("作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题。")]),t._v(" "),a("p",[t._v('事件循环机制EventLoop：在程序中设置两个线程：一个负责程序本身的运行，称为"主线程"；另一个负责主线程与其他进程（主要是各种I/O操作）的通信，被称为"Event Loop线程"')]),t._v(" "),a("h2",{attrs:{id:"_9-宏队列和微队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-宏队列和微队列"}},[t._v("#")]),t._v(" 9.宏队列和微队列")]),t._v(" "),a("p",[t._v("1、宏列队: 用来保存待执行的宏任务(回调), 比如: 定时器回调/DOM 事件回调/ajax 回调")]),t._v(" "),a("p",[t._v("2、微列队: 用来保存待执行的微任务( 回调), 比如: promise 的回调/MutationObserver 的回调")]),t._v(" "),a("p",[t._v("从script(整体代码)开始第一次循环。之后全局上下文进入函数调用栈。直到调用栈清空(只剩全局)，然后执行所有的微任务。当所有可执行的微任务执行完毕之后。循环再次从macro-task开始，找到其中一个任务队列执行完毕，然后再执行所有的宏任务，这样一直循环下去。其中每一个任务的执行，无论是微任务还是宏任务，都是借助函数调用栈来完成。")]),t._v(" "),a("h2",{attrs:{id:"_10-跨域是如何引起的，什么是同源策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-跨域是如何引起的，什么是同源策略"}},[t._v("#")]),t._v(" 10.跨域是如何引起的，什么是同源策略")]),t._v(" "),a("p",[t._v("从一个域上加载的脚本不允许访问另外一个域的文档属性。")]),t._v(" "),a("p",[t._v("同源策略/SOP（Same origin policy）是一种约定，由Netscape公司1995年引入浏览器，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。所谓同源是指”协议+域名+端口”三者相同。")]),t._v(" "),a("p",[t._v("URL由协议、域名、端口和路径组成，如果两个URL的协议、域名和端口相同，则表示它们同源。")]),t._v(" "),a("h2",{attrs:{id:"_11-xss和csrf安全问题，如何防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-xss和csrf安全问题，如何防御"}},[t._v("#")]),t._v(" 11.xss和csrf安全问题，如何防御")]),t._v(" "),a("p",[t._v("（1）跨站脚本攻击。XSS 攻击是指攻击者在网站上注入恶意的客户端代码，通过恶意脚本对客户端网页进行篡改，从而在用户浏览网页时，对用户浏览器进行控制或者获取用户隐私数据的一种攻击方式。")]),t._v(" "),a("p",[t._v("HttpOnly 防止劫取 Cookie，输入检查，输出检查，使用编码或转义的方式来防御 XSS 攻击")]),t._v(" "),a("p",[t._v("（2）CSRF跨站请求伪造。，CSRF 攻击是攻击者借助受害者的 Cookie 骗取服务器的信任，可以在受害者毫不知情的情况下以受害者名义伪造请求发送给受攻击服务器，从而在并未授权的情况下执行在权限保护之下的操作")]),t._v(" "),a("p",[t._v("验证码，添加 token 验证")]),t._v(" "),a("h2",{attrs:{id:"_12-前端本地存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-前端本地存储"}},[t._v("#")]),t._v(" 12.前端本地存储")]),t._v(" "),a("p",[t._v("（1）cookie")]),t._v(" "),a("p",[t._v("在我们发送http请求得时候，响应头会包含此次会话得会话信息返回给客户端，浏览器回存储这样得会话信息\n并且在本地有了cookie之后，每次发送请求都会把信息发送回服务器")]),t._v(" "),a("p",[t._v("（2）sessionStorage")]),t._v(" "),a("p",[t._v("sessionStorage在使用中有很严格的要求，他在一个tab页里边不能被另一个tab页使用\n应用的场景有，比如说我们都制动，在页面刷新的时候，我们写的js里边的变量函数等等的，内存会被释放掉，那么这个时候可以用sessionStorage来存储一些不想被释放掉内存的数据，比如说记录一个滚动条的位置，或者播放器的进度")]),t._v(" "),a("p",[t._v("（3）localStorage")]),t._v(" "),a("p",[t._v("他可以进行跨页读取，并且他是一个真正的本地存储，他并不会因为浏览器的关闭而清除数据，如果你不进行手动清除的话，他是会一直存在的")]),t._v(" "),a("h2",{attrs:{id:"_13-箭头函数中this的指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-箭头函数中this的指向"}},[t._v("#")]),t._v(" 13.箭头函数中this的指向")]),t._v(" "),a("p",[t._v("箭头函数没有自己的this，它会捕获其所在（即定义的位置）上下文的this值， 作为自己的this值")]),t._v(" "),a("h2",{attrs:{id:"_14-原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-原型链"}},[t._v("#")]),t._v(" 14.原型链")]),t._v(" "),a("p",[t._v("每个实例对象（ object ）都有一个私有属性（称之为 "),a("strong",[t._v("proto")]),t._v(" ）指向它的构造函数的原型对象（prototype ）。该原型对象也有一个自己的原型对象( "),a("strong",[t._v("proto")]),t._v(" ) ，层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。")]),t._v(" "),a("p",[a("strong",[t._v("prototype")]),t._v(":")]),t._v(" "),a("p",[t._v("​    __prototype__属性，它是函数所独有的，它是从一个函数指向一个对象。它的含义是函数的原型对象，也就是这个函数（其实所有函数都可以作为构造函数）所创建的实例的原型对象; 这个属性是一个指针，指向一个对象，这个对象的用途就是包含所有实例共享的属性和方法（我们把这个对象叫做原型对象）")]),t._v(" "),a("p",[a("strong",[t._v("proto")]),t._v(":")]),t._v(" "),a("p",[t._v("​    "),a("strong",[t._v("proto")]),t._v(" 是原型链查询中实际用到的，它总是指向 prototype，换句话说就是指向构造函数的原型对象，它是对象独有的。")]),t._v(" "),a("p",[a("strong",[t._v("总结：")])]),t._v(" "),a("p",[t._v("1、"),a("strong",[t._v("proto")]),t._v(" 是原型链查询中实际用到的，它总是指向 prototype")]),t._v(" "),a("p",[t._v("2、__prototype__是函数所独有的，在定义构造函数时自动创建，它总是被 "),a("strong",[t._v("proto")]),t._v(" 所指")]),t._v(" "),a("h2",{attrs:{id:"_15-网络请求有哪几种请求方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-网络请求有哪几种请求方式"}},[t._v("#")]),t._v(" 15.网络请求有哪几种请求方式")]),t._v(" "),a("p",[t._v("get请求：这种方法是将信息存储在url中，既不安全，还无法传递太大的数据。")]),t._v(" "),a("p",[t._v("post:向指定的路径提交数据进行处理请求，一般用于表单的提交数据。")]),t._v(" "),a("p",[t._v("options:返回服务器针对特定资源所支持的http请求方法。")]),t._v(" "),a("p",[t._v("head:与get请求相似的响应，但是请求体不会被返回。")]),t._v(" "),a("p",[t._v("put:从客户端向服务器传送的数据取代指定的文档的内容。")]),t._v(" "),a("p",[t._v("delete:请求服务器删除指定的页面")]),t._v(" "),a("p",[t._v("trace:返回显示服务收到的请求，主要用于测试或诊断")]),t._v(" "),a("p",[t._v("connect:http/1.1协议中预留给能够将链接改为管道方式的代理服务")]),t._v(" "),a("h2",{attrs:{id:"_16-options请求方法的主要用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-options请求方法的主要用途"}},[t._v("#")]),t._v(" 16.OPTIONS请求方法的主要用途")]),t._v(" "),a("p",[t._v("1、获取服务器支持的HTTP请求方法；也是黑客经常使用的方法。")]),t._v(" "),a("p",[t._v("2、用来检查服务器的性能。例如：AJAX进行跨域请求时的预检，需要向另外一个域名的资源发送一个HTTP OPTIONS请求头，用以判断实际发送的请求是否安全。")]),t._v(" "),a("h2",{attrs:{id:"_17-客户端渲染和服务端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-客户端渲染和服务端渲染"}},[t._v("#")]),t._v(" 17.客户端渲染和服务端渲染")]),t._v(" "),a("p",[a("strong",[t._v("服务端（SSR）")]),t._v("：由nodejs服务器来直出页面，请求到达后端后，后端拉取cgi接口数据，根据直出bundle生成render对象，render对象将执行客户端代码构建VDOM，生成HTML string，填充进模板HTML，返回HTML资源，浏览器解析后加载CSS、JS资源，（在CSS加载结束后触发FP和FMP），Vue实例初始化，接管后端直出的HTML，页面可响应。DOM树在服务端生产，然后返回给前端（异步获取数据）")]),t._v(" "),a("p",[a("strong",[t._v("客户端（CSR）")]),t._v("：一般由静态资源服务器（CDN）等直接返回HTML资源，之后浏览器解析HTML加载CSS、JS资源（CSS加载结束后页面会尽快进行首屏渲染FP），JS依赖加载结束后，Vue实例初始化，拉取页面数据，页面渲染（FMP）。前端去后端取数据生成DOM树")]),t._v(" "),a("p",[t._v("客户端渲染和服务端渲染的区别：")]),t._v(" "),a("p",[t._v("1、客户端渲染你不利于SEO搜索引擎优化，服务端可以被爬虫出抓取，为了SEO搜索引擎优化")]),t._v(" "),a("p",[t._v("2、响应速度：服务端渲染会加快页面的响应速度，客户端渲染页面的响应速度慢")]),t._v(" "),a("p",[t._v("3、开发效率：服务端渲染逻辑分离的不好，不利于前后端分离，开发效率低，客户端渲染是采用前后端分离的方式开发，效率更高，也是大部分业务采取的渲染方式。")]),t._v(" "),a("h2",{attrs:{id:"_18-遍历问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-遍历问题"}},[t._v("#")]),t._v(" 18.遍历问题")]),t._v(" "),a("ul",[a("li",[t._v("ES5 新语法 ， 低版本浏览器无法兼容：forEach")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("jquery 遍历元素")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("使用forEach遍历为元素")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("jquert 遍历伪元素")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"_19-事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-事件绑定"}},[t._v("#")]),t._v(" 19.事件绑定")]),t._v(" "),a("p",[t._v("1.addEventListener()：")]),t._v(" "),a("p",[t._v("是W3C所支持的，Chrome、FireFox、Opera、Safari、IE9.0及其以上版本都支持该函数")]),t._v(" "),a("p",[t._v("2.attachEvent()：")]),t._v(" "),a("p",[t._v("IE8.0及其以下版本支持该方法")]),t._v(" "),a("blockquote",[a("p",[t._v("所以，这种绑定事件的方法必须要处理浏览器兼容问题。")])]),t._v(" "),a("p",[a("strong",[t._v("兼容IE和非IE浏览器事件绑定的代码：")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addEventListener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持使用 addEventListener()")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 判断 type 是否以 "on" 开头')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"on"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 以 "on" 开头，不需要，则去掉')]),t._v("\n            type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不支持使用 addEventListener()")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 判断 type 是否以 "on" 开头')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"on"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 没有以 "on" 开头，需要，则加上')]),t._v("\n            type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"on"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h2",{attrs:{id:"_20-js的冒泡事件和捕获事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-js的冒泡事件和捕获事件"}},[t._v("#")]),t._v(" 20.js的冒泡事件和捕获事件")]),t._v(" "),a("p",[t._v("事件捕获指的是从document到触发事件的那个节点，即自上而下的去触发事件。相反的，事件冒泡是自下而上的去触发事件")]),t._v(" "),a("h2",{attrs:{id:"_21-作用域和作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-作用域和作用域链"}},[t._v("#")]),t._v(" 21.作用域和作用域链")]),t._v(" "),a("p",[t._v("作用域分为全局作用域和局部作用域，当生成作用域时，自下向上产生作用域链，作用域只能从自身往上查询，不可向下。")]),t._v(" "),a("h2",{attrs:{id:"_22-回流和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-回流和重绘"}},[t._v("#")]),t._v(" 22.回流和重绘")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("回流（reflow）是更明显的一种改变，可以理解为渲染树需要重新计算。就相当于重新卸载和加载一样 这样就是发生回流一定有重绘的发生。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("HTML代码转化成DOM Tree")])]),t._v(" "),a("li",[a("p",[t._v("CSS代码转化成CSSOM Tree（CSS Object Model）")])]),t._v(" "),a("li",[a("p",[t._v("结合DOM和CSSOM，生成一棵渲染树Render Tree")])]),t._v(" "),a("li",[a("p",[t._v("生成布局（"),a("strong",[t._v("flow")]),t._v("），将所有渲染树进行平面合成")])])])]),t._v(" "),a("li",[a("p",[t._v("重绘（repaints）是一个元素外观的改变所触发的浏览器行为,浏览器会根据元素的新属性重新绘制，使元素呈现新的外观。重绘不会带来新的布局，所以并不一定伴随回流。")]),t._v(" "),a("ul",[a("li",[t._v("将布局绘制（"),a("strong",[t._v("paint")]),t._v("）在屏幕上")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("重排和重绘的DOM元素层级越高，成本就越高。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);